package dk.aau.cs {	import flash.net.Socket;	import flash.system.Security;	import flash.utils.ByteArray;		public class ARDrone {				private var connection:Socket = new Socket();		private var ip:String;		private var port:int;		public function ARDrone(ip_address:String, port_number:int) {			ip = ip_address;			port = port_number;			connection.connect(ip, port);			Security.allowDomain('*');		}				private function sendCommand(object:Object) {			var str:String = JSON.stringify(object);			if (connection.connected) {				connection.writeUTFBytes(str);				connection.flush();			} else {				connection.connect(ip, port);			}		}				public function hover() {			//sendCommand('hover');		}				public function flight() {			var o:Object = new Object();			o.action = 'flight';			sendCommand(o);		}				public function left() {			pcmd(1, 0, 0, 0, -0.4);		}				public function right() {			pcmd(1, 0, 0, 0, 0.4);		}				public function forward() {			pcmd(1, 0, 0.4, 0, 0);		}				public function backward() {			pcmd(1, 0, -0.4, 0, 0);		}				private function pcmd(flag:int, phi:Number, theta:Number, gaz:Number, yaw:Number) {			/*var axises:Array = [phi, theta, gaz, yaw];			axises = convertAxis(axises);			var values:Array = [flag];			values = values.concat(axises);			var args:String = values.toString();*/			var o:Object = new Object();			o.action = 'steer';			o.args = new Object();			o.args.flag = flag;			o.args.phi = phi;			o.args.theta = theta;			o.args.gaz = gaz;			o.args.yaw = yaw;			sendCommand(o);		}				private function convertAxis(arg:Array) {			var i:int;			for (i = 0; i < arg.length; i++) {				arg[i] = minmax(-1.0, 1.0, arg[i]);				arg[i] = float2int(arg[i]);			}						return arg;		}				private function minmax(min:Number, max:Number, val:int) {			if (val < min) {				val = min;			} else if (val > max) {				val = max;			}						return val;		}				private function float2int(number:Number) {			var b:ByteArray = new ByteArray();			b.writeFloat(number);			b.position = 0;			var i:int = b.readInt();						return i;		}	}	}